<?xml version="1.0" encoding="UTF-8"?>
<configuration >
<!-- 
	根节点<configuration>下有两个属性，三个节点
	属性一：设置上下文名称<contextName>
	属性二：设置变量<property>
	
	子节点一<appender>
	appender用来格式化日志输出节点，有俩个属性name和class，class用来指定哪种输出策略，常用就是控制台输出策略和文件输出策略。
 -->

	<contextName>logback</contextName>
	<property name="log.path" value="/Users/julyWind/Documents/log"></property>

	<!-- 输出到控制台 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
		</encoder>
		
		<!-- 
			<encoder>表示对日志进行编码：

				%d{HH: mm:ss.SSS}——日志输出时间
				%thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用
				%-5level——日志级别，并且使用5个字符靠左对齐
				%logger{36}——日志输出者的名字
				%msg——日志消息
				%n——平台的换行符
				ThresholdFilter为系统定义的拦截器，例如我们用ThresholdFilter来过滤掉ERROR级别以下的日志不输出到文件中。如果不用记得注释掉，不然你控制台会发现没日志~
		 -->
	</appender>
	
	<!-- 输出到文件 -->
	<appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
	    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	        <fileNamePattern>${log.path}/logback.%d{yyyy-MM-dd}.log</fileNamePattern>
	        <maxHistory>30</maxHistory>
	        <totalSizeCap>1GB</totalSizeCap>
	    </rollingPolicy>
	    <encoder>
	        <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
	    </encoder>
	</appender>
	
	<root level="debug">
		<appender-ref ref="console"/>
		<appender-ref ref="file"/>
	</root>
</configuration>